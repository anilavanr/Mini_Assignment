{
	"info": {
		"_postman_id": "6036bde7-2623-46cc-83d6-9515a9b72ec1",
		"name": "Mini_Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24242247"
	},
	"item": [
		{
			"name": "Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"const response = pm.response.json();\r",
							"console.log(response[0].id);\r",
							"id = response[0].id\r",
							"userid = response[0].userid\r",
							"title =response[0].title\r",
							"\r",
							"pm.test(\"User with id=40 has userid = 4\", function () {\r",
							"    pm.expect(id).to.eql(40);\r",
							"});\r",
							"\r",
							"pm.test(\"title is string\", function () {\r",
							"    pm.expect(title).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\" , function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\" , function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts?id=40&user id=4",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "id",
							"value": "40"
						},
						{
							"key": "user id",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\" , function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\" , function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Body matches String\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?id=createdAt",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "createdAt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"id = response.data.id;\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Id equals to 2\", function(){\r",
							"    pm.expect(id).to.be.eql(2)\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\" , function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2?id=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					],
					"query": [
						{
							"key": "id",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.test(\"Name is updated with Arun\" , function (){\r",
							"    pm.expect(response.name).to.be.eql(\"Arun\");\r",
							"});\r",
							"\r",
							"pm.test(\"Job is updated with Manager\", function (){\r",
							"    pm.expect(response.name).to.be.eql(\"Manager\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\t \r\n{\r\n\"name\": \"Arun\", \r\n\r\n   \"job\": \"Manager\", \r\n\r\n} "
				},
				"url": {
					"raw": "https://reqres.in/api/users/",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 400ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}